project (CuteRUI C CXX)
cmake_minimum_required (VERSION 3.6)
set (CMAKE_CXX_STANDARD 11)

option(VISIT_COUNT_ENALBED "Whether use visit count." off)

if (${VISIT_COUNT_ENALBED})
  add_definitions(-DVISIT_COUNT_ENALBED=1)
  if (WIN32)
    find_path(CPPREST_INCLUDE_DIR cpprest/version.h
      ${CPPREST_DIR}/Release/include
      $ENV{CPPREST_DIR}/Release/include)
    set (CPPREST_DIR "${CPPREST_INCLUDE_DIR}/../..")
    file(STRINGS "${CPPREST_INCLUDE_DIR}/cpprest/version.h" version_file)
    string(REGEX MATCH "CPPREST_VERSION_MINOR ([0-9]+)" _ ${version_file})
    set(minor "${CMAKE_MATCH_1}")
    string(REGEX MATCH "CPPREST_VERSION_MAJOR ([0-9]+)" _ ${version_file})
    set(major "${CMAKE_MATCH_1}")
    add_library (cpprest SHARED IMPORTED GLOBAL)
    set_property (TARGET cpprest PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${CPPREST_INCLUDE_DIR})
    set_property (TARGET cpprest PROPERTY IMPORTED_LOCATION_DEBUG "${CPPREST_DIR}/Binaries/Win32/Debug/cpprest140d_${major}_${minor}.dll")
    set_property (TARGET cpprest PROPERTY IMPORTED_IMPLIB_DEBUG "${CPPREST_DIR}/Binaries/Win32/Debug/cpprest140d_${major}_${minor}.lib")
    set_property (TARGET cpprest PROPERTY IMPORTED_LOCATION_RELEASE "${CPPREST_DIR}/Binaries/Win32/Release/cpprest140_${major}_${minor}.dll")
    set_property (TARGET cpprest PROPERTY IMPORTED_IMPLIB_RELEASE "${CPPREST_DIR}/Binaries/Win32/Release/cpprest140_${major}_${minor}.lib")
  else ()
    find_library(CPPREST_LIB_PATH NAMES cpprest)
    include("${CPPREST_LIB_PATH}/../cpprest/cpprest-config.cmake")
  endif ()
endif ()

find_package (Boost REQUIRED)

set (USE_MSVC_RUNTIME_LIBRARY_DLL OFF CACHE BOOL "force soci to use C++ 11" FORCE)
add_subdirectory (ext/glfw)

foreach (flag CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELWITHDEBINFO CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
  if (${flag} MATCHES "/MD")
    string (REGEX REPLACE "/MD" "/MT" ${flag} "${${flag}}")
  endif ()
  if (${flag} MATCHES "/MDd")
    string (REGEX REPLACE "/MDd" "/MTd" ${flag} "${${flag}}")
  endif ()
endforeach ()
add_library (glad STATIC ext/glad/src/glad)

include_directories ("${CMAKE_CURRENT_LIST_DIR}/ext/glad/include" "${CMAKE_CURRENT_LIST_DIR}/ext" "ext/nanovg" "${Boost_INCLUDE_DIRS}" "${CMAKE_CURRENT_LIST_DIR}/ext/glfw/include")

include (cmake/bin2c.cmake)
bin2c(resource/resource resource/text.txt resource/close.png resource/info.png resource/changed.png resource/unchanged.png resource/about.png)
add_subdirectory (src)